---
import "../styles/globals.scss";
import "../styles/blogPost.scss";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header/Header.astro";
import Footer from "../components/Footer.astro";
import TableOfContents from "../components/Blog/TableOfContents.astro";
import PortalContainers from "../components/PortalContainers.astro";
import ShareArticleFooter from "../components/Blog/Interactive/ShareArticleFooter";
import VisitPageOnGithub from "../components/Blog/Static/VisitPageOnGithub.astro";
import { BASE_KEYWORDS } from "../config";
import type { BlogProps } from "../types/index";

type Props = BlogProps;

const {
  frontmatter: { title, author, pubDate, updatedOn, tags, description, authorSocialLink, url },
  headings,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} keywords={[...BASE_KEYWORDS, ...tags]} />
    <script
      async
      src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1846210135713091"
      crossorigin="anonymous"></script>
  </head>

  <body>
    <Header />
    <main class="mt-20 m-auto px-6" style="width: min(800px, 100%);">
      <article class="flex flex-col gap-8">
        <div id="POST_HEADER" class="flex flex-col gap-4 mt-4">
          <a
            href="/blog"
            class="dark:text-text-secondary text-lightMode-text-secondary flex items-center gap-2 text-sm font-semibold"
          >
            <i class="fa-solid fa-chevron-left fill-red-500"></i>
            Go back
          </a>
          <p class="title text-3xl font-semibold">{title}</p>
          <div class="flex flex-col gap-2">
            <div class="flex items-center gap-1">
              {
                authorSocialLink ? (
                  <a href={authorSocialLink} class="text-sm font-semibold">
                    {author}
                  </a>
                ) : (
                  <p class="text-sm font-semibold dark:text-text-secondary text-lightMode-text-secondary">
                    {author}
                  </p>
                )
              }
              <p
                class="dark:text-text-secondary text-lightMode-text-secondary font-semibold text-sm"
              >
                • Created on {pubDate}
              </p>
              {
                updatedOn ? (
                  <p class="dark:text-text-secondary text-lightMode-text-secondary font-semibold text-sm">
                    • Updated on {updatedOn}
                  </p>
                ) : null
              }
            </div>
            <div class="flex gap-1 items-center">
              <p
                class="text-sm dark:text-text-secondary text-lightMode-text-secondary font-semibold"
              >
                Tags:
              </p>
              {
                tags.map((tag) => (
                  <p class="text-sm font-semibold dark:text-green-accent text-lightMode-green-accent">
                    #{tag}
                  </p>
                ))
              }
            </div>
          </div>
        </div>
        <hr />
        <TableOfContents headings={headings} />
        <hr />
        <div id="POST_CONTENT">
          <slot />
        </div>
        <hr />
        <ShareArticleFooter client:visible url={url} />
        <VisitPageOnGithub url={url} />
        <p>{url}</p>
        <hr />
      </article>
    </main>

    <Footer />
    <PortalContainers />
  </body>
</html>
